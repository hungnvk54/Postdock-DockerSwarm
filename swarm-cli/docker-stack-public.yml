version: "3.3"


networks:
    cluster:
        driver: overlay

volumes:
    pgmaster:
    pgslave1:
    pgslave2:
    backup:


services:
    pgmaster:
        image: postdock/postgres
        deploy:
            endpoint_mode: vip
            mode: replicated
            placement:
                constraints:
                    - node.labels.pgtype == primary
            replicas: 1
            #restart_policy:
            #    condition: any
        environment:
            NODE_ID: 1
            NODE_NAME: node1
            CLUSTER_NODE_NETWORK_NAME: pgmaster
            PARTNER_NODES: "pgmaster,pgslave1,pgslave2"
            REPLICATION_PRIMARY_HOST: pgmaster
            NODE_PRIORITY: 100
            SSH_ENABLE: 1
            CLEAN_OVER_REWIND: 0
            CONFIGS_DELIMITER_SYMBOL: ;
            CONFIGS: "listen_addresses:'*';max_replication_slots:5"
            CLUSTER_NAME: pg_cluster
            REPLICATION_DB: replication_db
            REPLICATION_USER: replication_user
            REPLICATION_PASSWORD: replication_pass
            POSTGRES_PASSWORD: postgre_pass
            POSTGRES_USER: postgre_user
            POSTGRES_DB: postgre_db
        ports:
          - 5422:5432
        volumes:
            - pgmaster:/var/lib/postgresql/data
            - /home/hungnv/postdock/ssh/:/tmp/.ssh/keys
            - /home/hungnv/postdock/ssh/:/home/postgres/.ssh/keys
        networks:
            cluster:
                aliases:
                    - pgmaster
    
    pgslave1:
        image: postdock/postgres
        deploy:
            endpoint_mode: vip
            mode: replicated
            placement:
                constraints:
                    - node.labels.pgtype == replica1
            replicas: 1 
            #restart_policy:
            #    condition: any
        environment:
            NODE_ID: 2
            NODE_NAME: node2
            CLUSTER_NODE_NETWORK_NAME: pgslave1 # (default: hostname of the node)
            SSH_ENABLE: 1
            PARTNER_NODES: "pgmaster,pgslave1,pgslave2"
            REPLICATION_PRIMARY_HOST: pgmaster
            CLEAN_OVER_REWIND: 1
            CONFIGS_DELIMITER_SYMBOL: ;
            CONFIGS: "max_replication_slots:10" #some overrides
            REPLICATION_PASSWORD: replication_pass
            POSTGRES_PASSWORD: postgre_pass
            POSTGRES_USER: postgre_user
            POSTGRES_DB: postgre_db
        ports:
            - 5441:5432
        volumes:
            - pgslave1:/var/lib/postgresql/data
            - /home/hungnv/postdock/ssh:/tmp/.ssh/keys
            - /home/hungnv/postdock/ssh/:/home/postgres/.ssh/keys
        networks:
            cluster:
                aliases:
                    - pgslave1
        depends_on:
            - pgmaster
    
    pgslave2:
        image: postdock/postgres
        deploy:
            endpoint_mode: vip
            mode: replicated
            placement:
                constraints:
                    - node.labels.pgtype == replica2
            replicas: 1
            #restart_policy:
            #    condition: any
        environment:
            NODE_ID: 3
            NODE_NAME: node3
            CLUSTER_NODE_NETWORK_NAME: pgslave2 # (default: hostname of the node)
            REPLICATION_PRIMARY_HOST: pgmaster # I want to have cascade Streeming replication
            PARTNER_NODES: "pgmaster,pgslave1,pgslave2"
            CLEAN_OVER_REWIND: 1
            CONFIGS_DELIMITER_SYMBOL: ;
            CONFIGS: "max_replication_slots:10"
            SSH_ENABLE: 1
            REPLICATION_PASSWORD: replication_pass
            POSTGRES_PASSWORD: postgre_pass
            POSTGRES_USER: postgre_user
            POSTGRES_DB: postgre_db
        ports:
            - 5442:5432
        volumes:
            - pgslave2:/var/lib/postgresql/data
            - /home/hungnv/postdock/ssh:/tmp/.ssh/keys
            - /home/hungnv/postdock/ssh/:/home/postgres/.ssh/keys
        networks:
            cluster:
                aliases:
                    - pgslave2
        depends_on:
            - pgmaster
            
    pgbackup:
        image: postdock/barman
        deploy:
            endpoint_mode: vip
            mode: replicated
            placement:
                constraints:
                    - node.labels.pgbackup == true
            replicas: 1
            #restart_policy:
            #    condition: any
        environment:
            REPLICATION_USER: replication_user # default is replication_user
            REPLICATION_PASSWORD: replication_pass # default is replication_pass
            REPLICATION_HOST: pgmaster
            POSTGRES_PASSWORD: postgre_pass
            POSTGRES_USER: postgre_user
            POSTGRES_DB: postgre_db
            SSH_ENABLE: 1
            BACKUP_SCHEDULE: "*/30 */5 * * *"
        volumes:
            - backup:/var/backups
            - /home/hungnv/postdock/ssh:/tmp/.ssh/keys
            - /home/hungnv/postdock/ssh/:/home/postgres/.ssh/keys
        networks:
            cluster:
                aliases:
                    - backup
        depends_on:
            - pgmaster
            - pgslave1
            - pgslave2
                    
    pgpool:
        image: postdock/pgpool
        deploy:
            endpoint_mode: vip
            mode: replicated
            placement:
                constraints:
                    - node.labels.pgpool == true
            replicas: 1
            #restart_policy:
            #    condition: any
        environment:
            PCP_USER: pcp_user
            PCP_PASSWORD: pcp_pass
            WAIT_BACKEND_TIMEOUT: 60

            CHECK_USER: postgre_user
            CHECK_PASSWORD: postgre_pass
            CHECK_PGCONNECT_TIMEOUT: 3 #timout for checking if primary node is healthy
            SSH_ENABLE: 1
            DB_USERS: postgre_user:postgre_pass # in format user:password[,user:password[...]]
            BACKENDS: "0:pgmaster:5432:1:/var/lib/postgresql/data:ALLOW_TO_FAILOVER,1:pgslave1::::,3:pgslave2::::,2:pgslave2::::" #,4:pgslaveDOES_NOT_EXIST::::
                      # in format num:host:port:weight:data_directory:flag[,...]
                      # defaults:
                      #   port: 5432
                      #   weight: 1
                      #   data_directory: /var/lib/postgresql/data
                      #   flag: ALLOW_TO_FAILOVER
            REQUIRE_MIN_BACKENDS: 3 # minimal number of backends to start pgpool (some might be unreachable)
            CONFIGS: "num_init_children:250,max_pool:4"
                      # in format variable1:value1[,variable2:value2[,...]] if CONFIGS_DELIMITER_SYMBOL=, and CONFIGS_ASSIGNMENT_SYMBOL=:
                      # used for pgpool.conf file
            REPLICATION_PASSWORD: replication_pass
            POSTGRES_PASSWORD: postgre_pass
            POSTGRES_USER: postgre_user
            POSTGRES_DB: postgre_db
        ports:
            - 5430:5432
            - 9898:9898 # PCP
        volumes:
            - /home/hungnv/postdock/ssh:/tmp/.ssh/keys
            - /home/hungnv/postdock/ssh/:/home/postgres/.ssh/keys
        networks:
            cluster:
                aliases:
                    - pgpool
        depends_on:
            - pgmaster
            - pgslave1
            - pgslave2
